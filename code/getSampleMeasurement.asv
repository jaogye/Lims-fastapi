
% This function provide the data to fill the general information table and
% Quality table of Input LabData option. 
function [sample, measurement] = getSampleMeasurement(conn, sdate)

sql = "SELECT  s.samplenumber SampleNumber, s.customer CustomerName, sp.name Tank, " + ...
"s.article_no ArticleCode, concat(date,' ', time)  SampleDate, creationdate TestDate, " + ...
"p.name  Product, q.name Quality, cast( ordernumber_PVS as char)  ordernumber_PVS,  " + ...
"s.ordernumber_client, s.batchnumber, s.containernumber, s.remark Remark, " + ...
"s.COA, s.Day_COA, s.COC, s.opm " + ...
" FROM sample s left join samplepoint sp on s.samplepoint_id=sp.id, product p, quality q " + ...
" WHERE substring(s.date,1,10)='%s' and s.product_id=p.id and s.quality_id=q.id " + ...
" and s.samplematrix_id is null  " + ...
" UNION " + ...
"SELECT s.samplenumber SampleNumber, 'PVS' CustomerName, sp.name Tank, " + ...
"s.article_no ArticleCode, concat(date,' ', time)  SampleDate, " + ...
"creationdate TestDate, p.name  Product, q.name Quality, " + ...
"cast( ordernumber_PVS as char)   ordernumber_PVS,  s.ordernumber_client, " + ...
"s.batchnumber, s.containernumber, s.remark Remark, s.COA, s.Day_COA, s.COC, s.opm  " + ...
" FROM sample s, product p, quality q, samplepoint sp  " + ...
" WHERE substring(s.date,1,10)='%s' and s.product_id=p.id and s.quality_id=q.id " + ...
" and s.samplepoint_id=sp.id and s.samplematrix_id is not null ; " ; 

sql = sprintf( sql, [sdate, sdate] ) ; 
sample = select( conn, sql ) ; 
sample.Remark = strtrim( string(sample.Remark) ); 
sample.SampleNumber = strtrim( string(sample.SampleNumber) ); 
sample.CustomerName = strtrim( string(sample.CustomerName) ); 
sample.Tank = strtrim( string(sample.Tank) ); 
sample.Product = strtrim( string(sample.Product) ); 
sample.Quality = strtrim( string(sample.Quality) ); 
sample.containernumber = strtrim( string(sample.containernumber) ); 
sample.SampleDate = strtrim( string(sample.SampleDate) ); 
sample.ordernumber_client = strtrim( string(sample.ordernumber_client) ); 
sample.COA = strtrim( string(sample.COA) ); 
sample.Day_COA = strtrim( string(sample.Day_COA) ); 
sample.COC = strtrim( string(sample.COC) ); 
sample.opm = strtrim( string(sample.opm) ); 

sql = "SELECT s.samplenumber SampleNumber, m.*,  '' str_value, v.typevar, 0 modified " + ...
    " FROM sample s, measurement m, variable v " + ...
" WHERE m.variable_id=v.id and m.sample_id=s.id  and substring(s.date,1,10)='%s'" + ...
" ORDER BY s.samplenumber, v.ord ; " ; 
sql = sprintf( sql, sdate ) ; 
measurement = select( conn, sql ) ; 
measurement.SampleNumber = strtrim( string(measurement.SampleNumber) ); 
measurement.str_value = strtrim( string(measurement.str_value) ); 

for i=1:height(measurement)
    measurement.str_value(i) = string(measurement.value(i)) ; 
    if measurement.less(i) 
       measurement.str_value(i) = "<" + string(measurement.value(i)) ; 
    end 
    if measurement.value(i) == -1 || ismissing( measurement.value(i) )
       measurement.str_value(i) = "" ; 
    end     
    if ismissing( measurement.min(i) )
       measurement.min(i) = - Inf ; 
    end     
    if ismissing( measurement.max(i) )
       measurement.max(i) = Inf ; 
    end     
end

end

